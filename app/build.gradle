apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "hibernate.v2.testyourandroid"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 197110 // 0 = alpha, 1 = beta, 2 = release
        versionName "Cheungfan 711a"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            useProguard false
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            resValue "string", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            buildConfigField "String[]", "ADMOB_DEVICE_ID", getSecretKey("ADMOB_DEVICE_ID")
            buildConfigField "String[]", "APPBRAIN_DEVICE_ID", getSecretKey("APPBRAIN_DEVICE_ID")
            resValue "string", "GOOGLE_API_KEY", "\"" + getSecretKey("GOOGLE_API_KEY") + "\""
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            resValue "string", "ADMOB_APP_ID", "\"" + getSecretKey("ADMOB_APP_ID") + "\""
            buildConfigField "String[]", "ADMOB_DEVICE_ID", getSecretKey("ADMOB_DEVICE_ID")
            buildConfigField "String[]", "APPBRAIN_DEVICE_ID", getSecretKey("APPBRAIN_DEVICE_ID")
            resValue "string", "GOOGLE_API_KEY", "\"" + getSecretKey("GOOGLE_API_KEY") + "\""
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

static def getSecretKey(name) {
    Properties props = new Properties()
    File f = new File('./../Key/testyourandroid.secrets.properties')
    if (f.exists()) {
        props.load(new FileInputStream(f))
        return props[name]
    } else {
        return name
    }
}

dependencies {
    // Google Android Support
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-wearable:16.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'com.google.firebase:firebase-ads:17.0.0'

    // https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // https://github.com/afollestad/material-dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    // Roboto TextView
    implementation 'com.github.johnkil.android-robototextview:robototextview:4.0.0'

    // https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    // License Dialog
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.2'

    // GraphView
    implementation files('libs/graphview.jar')

    // Simple IAB
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    // AppBrain SDK
    implementation 'com.appbrain:appbrain-sdk:+@aar'

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true
    }

    // https://github.com/natario1/CameraView
    implementation 'com.otaliastudios:cameraview:1.6.0'

    // https://github.com/divyanshub024/AndroidDraw
    implementation 'com.github.divyanshub024:AndroidDraw:v0.1'

    // https://github.com/Blankj/AndroidUtilCode
    implementation 'com.blankj:utilcode:1.20.4'

    // https://github.com/luizgrp/SectionedRecyclerViewAdapter
    implementation 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.2.0'

    // https://github.com/akexorcist/Android-LocalizationActivity
    implementation 'com.akexorcist:localizationactivity:1.2.2'

    wearApp project(':wear')
}

apply plugin: 'com.google.gms.google-services'